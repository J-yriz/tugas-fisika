{"ast":null,"code":"var _jsxFileName = \"C:\\\\DATA\\\\Non-Gaming\\\\Kuliah Udinus\\\\tugas-fisika\\\\src\\\\pages\\\\App.tsx\";\nimport React from \"react\";\nimport { CosValues, SinValues } from \"../utility/Type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const menghitungAkhirMendatar = (kecepatanAwal, sudut) => {\n    const massaBola = 0.5; // kg\n    const gravitasi = 9.8; // m/s^2\n    const resistansiUdara = Number((Math.random() * (10 - 5) + 5).toFixed(3)); // m/s^2\n\n    // Validasi input\n    if (kecepatanAwal < 0 || kecepatanAwal > 55) return \"Tolong Input Kecepatan 0-55\";\n    if (sudut < 0 || sudut > 45) return \"Tolong Input Sudut 0-45\";\n\n    // Ambil nilai cos dari enum\n    const cosValue = CosValues[`COS_${sudut}`];\n    if (cosValue === undefined) return \"Nilai sudut tidak valid\";\n\n    // Perhitungan\n    const Vox = kecepatanAwal * cosValue; // Kecepatan mendatar awal\n    const gayaNormal = massaBola * gravitasi; // Gaya normal\n    const koefisienGesekan = 0.3 * gayaNormal; // Koefisien gesekan rata-rata\n    const percepatanGesekan = koefisienGesekan / massaBola; // Percepatan akibat gesekan\n    const totalPercepatan = percepatanGesekan + resistansiUdara; // Total percepatan\n    if (totalPercepatan <= 0) return \"Total percepatan tidak valid\"; // Pastikan percepatan masuk akal\n\n    const t_darat = Vox / totalPercepatan; // Waktu total mendatar\n    const posisiAkhirX = Vox * t_darat - 0.5 * totalPercepatan * Math.pow(t_darat, 2); // Posisi mendatar akhir\n\n    return posisiAkhirX >= 0 ? posisiAkhirX : 0; // Jika negatif, posisi diatur ke 0\n  };\n  const menghitungAkhirVerHori = (kecepatanAwal, sudut) => {\n    const gravitasi = 9.8; // m/s^2\n    const posisiAwalY = 0; // m\n    const posisiAwalX = 0; // m\n\n    // Validasi input\n    if (kecepatanAwal < 0 || kecepatanAwal > 55) return \"Tolong Input Kecepatan 0-55\";\n    if (sudut < 0 || sudut > 45) return \"Tolong Input Sudut 0-45\";\n\n    // Ambil nilai sin dan cos dari enum\n    const sinValue = SinValues[`SIN_${sudut}`];\n    const cosValue = CosValues[`COS_${sudut}`];\n    if (sinValue === undefined || cosValue === undefined) return \"Nilai sudut tidak valid\";\n\n    // Perhitungan\n    const Voy = kecepatanAwal * sinValue; // Kecepatan vertikal awal\n    const Vox = kecepatanAwal * cosValue; // Kecepatan horizontal awal\n    const totalPercepatanMendatar = Number((Math.random() * (10 - 5) + 5).toFixed(3)); // Resistansi udara acak\n    const totalPercepatanVertikal = gravitasi; // Percepatan vertikal akibat gravitasi\n\n    const t_udara = 2 * Voy / gravitasi; // Waktu total di udara\n    const posisiAkhirX = posisiAwalX + Vox * t_udara - 0.5 * totalPercepatanMendatar * Math.pow(t_udara, 2); // Posisi horizontal akhir\n    const posisiAkhirY = posisiAwalY; // Posisi vertikal akhir tetap sama karena kembali ke tanah\n    const titikTertinggi = posisiAwalY + Voy * (0.5 * t_udara) - 0.5 * totalPercepatanVertikal * Math.pow(0.5 * t_udara, 2); // Titik tertinggi\n\n    return {\n      posisiAkhirX,\n      posisiAkhirY,\n      titikTertinggi\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"ea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CosValues","SinValues","jsxDEV","_jsxDEV","App","menghitungAkhirMendatar","kecepatanAwal","sudut","massaBola","gravitasi","resistansiUdara","Number","Math","random","toFixed","cosValue","undefined","Vox","gayaNormal","koefisienGesekan","percepatanGesekan","totalPercepatan","t_darat","posisiAkhirX","pow","menghitungAkhirVerHori","posisiAwalY","posisiAwalX","sinValue","Voy","totalPercepatanMendatar","totalPercepatanVertikal","t_udara","posisiAkhirY","titikTertinggi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/DATA/Non-Gaming/Kuliah Udinus/tugas-fisika/src/pages/App.tsx"],"sourcesContent":["import React from \"react\";\nimport { CosValues, SinValues } from \"../utility/Type\";\n\nfunction App() {\n  const menghitungAkhirMendatar = (kecepatanAwal: number, sudut: number) => {\n    const massaBola = 0.5; // kg\n    const gravitasi = 9.8; // m/s^2\n    const resistansiUdara = Number((Math.random() * (10 - 5) + 5).toFixed(3)); // m/s^2\n\n    // Validasi input\n    if (kecepatanAwal < 0 || kecepatanAwal > 55) return \"Tolong Input Kecepatan 0-55\";\n    if (sudut < 0 || sudut > 45) return \"Tolong Input Sudut 0-45\";\n\n    // Ambil nilai cos dari enum\n    const cosValue = CosValues[`COS_${sudut}` as keyof typeof CosValues];\n    if (cosValue === undefined) return \"Nilai sudut tidak valid\";\n\n    // Perhitungan\n    const Vox = kecepatanAwal * cosValue; // Kecepatan mendatar awal\n    const gayaNormal = massaBola * gravitasi; // Gaya normal\n    const koefisienGesekan = 0.3 * gayaNormal; // Koefisien gesekan rata-rata\n    const percepatanGesekan = koefisienGesekan / massaBola; // Percepatan akibat gesekan\n    const totalPercepatan = percepatanGesekan + resistansiUdara; // Total percepatan\n    if (totalPercepatan <= 0) return \"Total percepatan tidak valid\"; // Pastikan percepatan masuk akal\n\n    const t_darat = Vox / totalPercepatan; // Waktu total mendatar\n    const posisiAkhirX = Vox * t_darat - 0.5 * totalPercepatan * Math.pow(t_darat, 2); // Posisi mendatar akhir\n\n    return posisiAkhirX >= 0 ? posisiAkhirX : 0; // Jika negatif, posisi diatur ke 0\n  };\n\n  const menghitungAkhirVerHori = (kecepatanAwal: number, sudut: number) => {\n    const gravitasi = 9.8; // m/s^2\n    const posisiAwalY = 0; // m\n    const posisiAwalX = 0; // m\n\n    // Validasi input\n    if (kecepatanAwal < 0 || kecepatanAwal > 55) return \"Tolong Input Kecepatan 0-55\";\n    if (sudut < 0 || sudut > 45) return \"Tolong Input Sudut 0-45\";\n\n    // Ambil nilai sin dan cos dari enum\n    const sinValue = SinValues[`SIN_${sudut}` as keyof typeof SinValues];\n    const cosValue = CosValues[`COS_${sudut}` as keyof typeof CosValues];\n\n    if (sinValue === undefined || cosValue === undefined) return \"Nilai sudut tidak valid\";\n\n    // Perhitungan\n    const Voy = kecepatanAwal * sinValue; // Kecepatan vertikal awal\n    const Vox = kecepatanAwal * cosValue; // Kecepatan horizontal awal\n    const totalPercepatanMendatar = Number((Math.random() * (10 - 5) + 5).toFixed(3)); // Resistansi udara acak\n    const totalPercepatanVertikal = gravitasi; // Percepatan vertikal akibat gravitasi\n\n    const t_udara = (2 * Voy) / gravitasi; // Waktu total di udara\n    const posisiAkhirX = posisiAwalX + Vox * t_udara - 0.5 * totalPercepatanMendatar * Math.pow(t_udara, 2); // Posisi horizontal akhir\n    const posisiAkhirY = posisiAwalY; // Posisi vertikal akhir tetap sama karena kembali ke tanah\n    const titikTertinggi = posisiAwalY + Voy * (0.5 * t_udara) - 0.5 * totalPercepatanVertikal * Math.pow(0.5 * t_udara, 2); // Titik tertinggi\n\n    return { posisiAkhirX, posisiAkhirY, titikTertinggi };\n  };\n\n  return (\n    <div className=\"font-sans\">\n      <p>ea</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}